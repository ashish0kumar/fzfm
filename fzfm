#!/usr/bin/env fish

set MEDIA_OPENER "wslview"
set TEXT_EDITOR "nvim"
set LIST_COMMAND "eza"
set PREVIEW_COMMAND "batcat"

function command_exists
    type -q $argv[1]
end

function setup_dependencies
    if not command_exists fzf
        echo "Error: fzf is required but not installed"
        exit 1
    end
    if not command_exists $LIST_COMMAND
        echo "Warning: $LIST_COMMAND not found, falling back to ls"
        set LIST_COMMAND "ls"
        set LIST_ARGS "-1A --color=always"
    else
        set LIST_ARGS "-1a --icons --color=always"
    end
    if not command_exists $PREVIEW_COMMAND
        echo "Warning: $PREVIEW_COMMAND not found, falling back to cat"
        set PREVIEW_COMMAND "cat"
    end
    if not command_exists $TEXT_EDITOR
        echo "Warning: $TEXT_EDITOR not found, falling back to nano"
        if command_exists nano
            set TEXT_EDITOR "nano"
        else
            echo "Error: No suitable text editor found"
            exit 1
        end
    end
    if not command_exists $MEDIA_OPENER
        if command_exists xdg-open
            echo "Warning: $MEDIA_OPENER not found, falling back to xdg-open"
            set MEDIA_OPENER "xdg-open"
        else if command_exists open
            echo "Warning: $MEDIA_OPENER not found, falling back to open"
            set MEDIA_OPENER "open"
        else
            echo "Warning: No suitable media opener found, multimedia files won't be opened"
            set MEDIA_OPENER ""
        end
    end
end

function open_file
    set file $argv[1]
    set mime_type (file --mime-type -b "$file")
    switch $mime_type
        case 'text/*' 'application/json' 'application/xml' 'application/javascript' 'application/x-shellscript'
            $TEXT_EDITOR "$file"
            clear
        case 'image/*' 'video/*' 'audio/*' 'application/pdf'
            if test -n "$MEDIA_OPENER"
                $MEDIA_OPENER "$file" >/dev/null 2>&1 &
            else
                echo "No media opener available. Cannot open $file"
                read -P "Press any key to continue..."
                clear
            end
        case '*'
            if test -b "$file"
                $TEXT_EDITOR "$file"
                clear
            else
                if test -n "$MEDIA_OPENER"
                    $MEDIA_OPENER "$file" >/dev/null 2>&1
                    if test $status -ne 0
                        $TEXT_EDITOR "$file"
                        clear
                    end
                else
                    $TEXT_EDITOR "$file"
                    clear
                end
            end
    end
end

function fzfm
    setup_dependencies
    set list_command "$LIST_COMMAND $LIST_ARGS"
    while true
        set selection (begin
            echo ".."
            eval $list_command
        end | fzf \
            --ansi \
            --reverse \
            --height 100% \
            --info right \
            --prompt "󰥨 Search: " \
            --pointer ">" \
            --marker "󰄲" \
            --border "rounded" \
            --border-label " 󱉭 "(pwd)"/ " \
            --border-label-pos center \
            --color 'fg:#cdd6f4,fg+:#cdd6f4,bg+:#313244,border:#a5aac3,pointer:#cba6f7,label:#cdd6f4' \
            --bind "right:accept" \
            --bind "enter:accept" \
            --bind "shift-up:preview-up" \
            --bind "shift-down:preview-down" \
            --bind "ctrl-r:reload($list_command)" \
            --preview-window "right:65%" \
            --preview "
                set file {}
                if test \"\$file\" = \"..\"
                    echo \"󱧰 Move up to parent directory\"
                else if test -d \"\$file\"
                    echo \"󰉋 Folder: \$file\"
                    echo \"\"
                    $list_command \"\$file\" 2>/dev/null
                else if test -f \"\$file\"
                    echo \"󰈙 File: \$file\"
                    echo \"\"
                    $PREVIEW_COMMAND --style=numbers --color=always --line-range :500 \"\$file\" 2>/dev/null; or cat \"\$file\"
                else
                    echo \"Invalid selection: \$file\"
                end
            ")
        if test -z "$selection"
            break
        end
        if test "$selection" = ".."
            cd ..
        else if test -d "$selection"
            cd "$selection"
        else if test -f "$selection"
            open_file "$selection"
        else
            break
        end
    end
end

if set -q FZFM_MEDIA_OPENER
    set MEDIA_OPENER "$FZFM_MEDIA_OPENER"
end
if set -q FZFM_TEXT_EDITOR
    set TEXT_EDITOR "$FZFM_TEXT_EDITOR"
end
if set -q FZFM_LIST_COMMAND
    set LIST_COMMAND "$FZFM_LIST_COMMAND"
end
if set -q FZFM_PREVIEW_COMMAND
    set PREVIEW_COMMAND "$FZFM_PREVIEW_COMMAND"
end

clear
fzfm

